// <auto-generated />
using System;
using HotelDataAceess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelDataAceess.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20250324221501_Initi")]
    partial class Initi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelDataAceess.Entiteis.Authentication.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RevokedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Authentication.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonID");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACB0319B20");

                    b.HasIndex(new[] { "PersonId" }, "UQ__Users__AA2FFB84A120F0B3")
                        .IsUnique()
                        .HasFilter("[PersonID] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951ACD4C3DC9AF");

                    b.HasIndex("PersonId");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId")
                        .HasName("PK__Countrie__10D160BF6D64096B");

                    b.HasIndex(new[] { "CountryName" }, "UQ__Countrie__E056F2013F3B1091")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("smallmoney");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A58F9235C1A");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("FullName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int>("NationalityCountryId")
                        .HasColumnType("int")
                        .HasColumnName("NationalityCountryID");

                    b.Property<string>("PersonalImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PersonId")
                        .HasName("PK__People__AA2FFB8504A21DDD");

                    b.HasIndex("NationalityCountryId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastStatusDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("NumberOfPeople")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ReservationPersonId")
                        .HasColumnType("int")
                        .HasColumnName("ReservationPersonID");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F04B141DD12");

                    b.HasIndex("ReservationPersonId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("AdditionalNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte>("AvailabilityStatus")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsPetFriendly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmokingAllowed")
                        .HasColumnType("bit");

                    b.Property<byte>("RoomFloor")
                        .HasColumnType("tinyint");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("RoomSize")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    b.HasKey("RoomId")
                        .HasName("PK__Rooms__32863919B4265D84");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<byte>("RoomTypeCapacity")
                        .HasColumnType("tinyint");

                    b.Property<string>("RoomTypeDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("RoomTypePricePerNight")
                        .HasColumnType("smallmoney");

                    b.Property<string>("RoomTypeTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomTypeId")
                        .HasName("PK__RoomType__BCC89611C6B4CBBE");

                    b.HasIndex(new[] { "RoomTypeTitle" }, "UQ__RoomType__E37A7CB411ACF533")
                        .IsUnique();

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Authentication.RefreshToken", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.Authentication.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Authentication.User", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("HotelDataAceess.Entiteis.Authentication.User", "PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK__Users__PersonID__4CA06362");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Booking", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.Person", "Person")
                        .WithMany("Bookings")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelDataAceess.Entiteis.Reservation", "Reservation")
                        .WithOne("Booking")
                        .HasForeignKey("HotelDataAceess.Entiteis.Booking", "ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__Reserv__619B8048");

                    b.Navigation("Person");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Payment", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("HotelDataAceess.Entiteis.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Bookin__6754599E");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Person", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.Country", "NationalityCountry")
                        .WithMany("People")
                        .HasForeignKey("NationalityCountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__People__National__3B75D760");

                    b.Navigation("NationalityCountry");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Reservation", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.Person", "ReservationPerson")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__5BE2A6F2");

                    b.HasOne("HotelDataAceess.Entiteis.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__RoomI__5CD6CB2B");

                    b.Navigation("ReservationPerson");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Room", b =>
                {
                    b.HasOne("HotelDataAceess.Entiteis.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Rooms__RoomTypeI__17036CC0");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Authentication.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Booking", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Country", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Person", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reservations");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Reservation", b =>
                {
                    b.Navigation("Booking")
                        .IsRequired();
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelDataAceess.Entiteis.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
